{"version":3,"sources":["../src/main/decorator/mvc.ts"],"names":[],"mappings":";AAAA,QAAO,kBAAkB,CAAC,CAAA;AAE1B;IAOE,YAAoB,MAAM;QAAN,WAAM,GAAN,MAAM,CAAA;IAC1B,CAAC;IAED,IAAI,KAAK;QACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;AACH,CAAC;AAZQ,eAAG,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7B,gBAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;AAC/B,eAAG,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7B,iBAAK,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AACjC,kBAAM,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;AAL/B,mBAAW,cAavB,CAAA;AASD,MAAM,yBAAyB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAE7D,wBAA+B,IAAY,EAAE,IAAkB;IAC7D,IAAI,GAAG,IAAI,IAAI,WAAW,CAAC,GAAG,CAAC;IAC/B,MAAM,CAAC,UAAU,MAAW,EAAE,WAAmB,EAAE,UAAwC;QACzF,IAAI,SAAS,GAAmB,OAAO,CAAC,WAAW,CAAC,yBAAyB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;QAC7F,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAC,CAAC,CAAC;QACrE,OAAO,CAAC,cAAc,CAAC,yBAAyB,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACvE,CAAC,CAAC;AACJ,CAAC;AAPe,sBAAc,iBAO7B,CAAA;AAED,sBAA6B,MAAW,EAAE,WAAmB,EAAE,UAAwC;IACrG,IAAI,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IACtC,UAAU,CAAC,KAAK,GAAG;QACjB,IAAI,WAAW,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAE5B,EAAE,CAAC,CAAC,WAAW,IAAI,OAAO,WAAW,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAU,KAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChE,CAAC;QACD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3B,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC,CAAA;AACH,CAAC;AAZe,oBAAY,eAY3B,CAAA;AAED;IACE,OAAc,YAAY,CAAC,MAAW;QACpC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,yBAAyB,EAAE,MAAM,CAAC;YAC3D,OAAO,CAAC,WAAW,CAAC,yBAAyB,EAAE,MAAM,CAAC,SAAS,CAAC;YAChE,EAAE,CAAC;IACP,CAAC;AACH,CAAC;AANY,WAAG,MAMf,CAAA","file":"mvc.js","sourcesContent":["import \"reflect-metadata\";\n\nexport class RequestType {\n  static GET = new RequestType('get');\n  static POST = new RequestType('post');\n  static PUT = new RequestType('put');\n  static PATCH = new RequestType('patch');\n  static DELETE = new RequestType('delete');\n\n  constructor(private _value) {\n  }\n\n  get value() {\n    return this._value;\n  }\n}\n\nexport interface EndpointInfo {\n  path: string,\n  type: RequestType,\n  callback: Function\n}\n\n\nconst requestMappingMetadataKey = Symbol(\"requestMappingMD\");\n\nexport function RequestMapping(path: string, type?: RequestType) {\n  type = type || RequestType.GET;\n  return function (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) {\n    let endpoints: EndpointInfo[] = Reflect.getMetadata(requestMappingMetadataKey, target) || [];\n    endpoints.push({path: path, type: type, callback: descriptor.value});\n    Reflect.defineMetadata(requestMappingMetadataKey, endpoints, target);\n  };\n}\n\nexport function ResponseBody(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) {\n  let originalMethod = descriptor.value;\n  descriptor.value = function () {\n    let returnValue = originalMethod.apply(this, arguments);\n    let response = arguments[1];\n    // If the returned value is a promise, resolve it first and then send the resulting value\n    if (returnValue && typeof returnValue.then === 'function') {\n      return returnValue.then((value: any) => response.send(value));\n    }\n    response.send(returnValue);\n    return returnValue;\n  }\n}\n\nexport class MVC {\n  public static getEndpoints(target: any): EndpointInfo[] {\n    return Reflect.getMetadata(requestMappingMetadataKey, target) ||\n      Reflect.getMetadata(requestMappingMetadataKey, target.prototype) ||\n      [];\n  }\n}"]}